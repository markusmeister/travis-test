--- 
title: "A Book to Test Travis CI"
author: "Markus Meister"
date: "`r Sys.Date()`"
site: bookdown::bookdown_site
output: bookdown::gitbook
documentclass: book
bibliography: [book.bib, packages.bib]
biblio-style: apalike
link-citations: yes
github-repo: rstudio/bookdown-demo
description: "This is a test of running the bookdown package on Travis CI. The output format for this example is bookdown::gitbook."
---

# Prerequisites

```{r include=FALSE}
install.packages("bookdown",repos = "http://cran.us.r-project.org")
install.packages("reticulate",repos = "http://cran.us.r-project.org")
install.packages("rprojroot",repos = "http://cran.us.r-project.org")
# update.packages("knitr",repos = "http://cran.us.r-project.org")
# update.packages("rmarkdown",repos = "http://cran.us.r-project.org")
```

```{r}
library(reticulate)
# use_python("/usr/local/bin/python3.8")
py_install("numpy")
py_install("matplotlib")
# knitr::knit_engines$set(python = reticulate::eng_python)
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
```

To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): <https://yihui.name/tinytex/>.

```{r include=FALSE}
# automatically create a bib database for R packages
knitr::write_bib(c(
  .packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
```

```{r}
projdir = rprojroot::find_rstudio_root_file() # project directory

include_svg = function(path) { # used to convert svg to pdf
  if (knitr::is_latex_output()) {
    output = xfun::with_ext(path, 'pdf')
    # you can compare the timestamp of pdf against svg to avoid conversion if necessary
    system2('rsvg-convert', c('-f', 'pdf', '-a', '-o', shQuote(c(output, path))))
  } else {
    output = path
  }
  knitr::include_graphics(output)
}
```


```{python}
import numpy as np
import os
import sys
import matplotlib
matplotlib.rcParams['text.usetex'] = True # use Latex to draw all text
matplotlib.rcParams['text.latex.preamble'] = [r'\usepackage{amsmath}']
import matplotlib.pyplot as plt
curdir = os.getcwd()
os.chdir(r.projdir)
from mib.utils import plot, save_img # plotting routines
os.chdir(curdir)
```
